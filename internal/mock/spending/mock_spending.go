// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\Onton\route256\internal\model\spending\spending.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	spending "route256/internal/model/spending"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockSpendingAction is a mock of SpendingAction interface.
type MockSpendingAction struct {
	ctrl     *gomock.Controller
	recorder *MockSpendingActionMockRecorder
}

// MockSpendingActionMockRecorder is the mock recorder for MockSpendingAction.
type MockSpendingActionMockRecorder struct {
	mock *MockSpendingAction
}

// NewMockSpendingAction creates a new mock instance.
func NewMockSpendingAction(ctrl *gomock.Controller) *MockSpendingAction {
	mock := &MockSpendingAction{ctrl: ctrl}
	mock.recorder = &MockSpendingActionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpendingAction) EXPECT() *MockSpendingActionMockRecorder {
	return m.recorder
}

// GetUserSpendingHistory mocks base method.
func (m *MockSpendingAction) GetUserSpendingHistory(userId int64) (*[]spending.Spending, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserSpendingHistory", userId)
	ret0, _ := ret[0].(*[]spending.Spending)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserSpendingHistory indicates an expected call of GetUserSpendingHistory.
func (mr *MockSpendingActionMockRecorder) GetUserSpendingHistory(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserSpendingHistory", reflect.TypeOf((*MockSpendingAction)(nil).GetUserSpendingHistory), userId)
}

// SendSpending mocks base method.
func (m *MockSpendingAction) SendSpending(userId, sum int64, spendingType string, date time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendSpending", userId, sum, spendingType, date)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendSpending indicates an expected call of SendSpending.
func (mr *MockSpendingActionMockRecorder) SendSpending(userId, sum, spendingType, date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendSpending", reflect.TypeOf((*MockSpendingAction)(nil).SendSpending), userId, sum, spendingType, date)
}
